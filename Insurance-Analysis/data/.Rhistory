table(cca$bclass)
#descriptive stat
summary(cca)
#graphs in r
hist(Income,col="blue")
summary(cca)
summary(cca$Black)
table(cca$bclass)
attach(cca)
tapply(Income,bclass,mean)
tapply(Income,bclass,median)
hist(income,col="blue")
#graphs in r
hist(Income,col="blue")
barplot(counts,main="number of CA by class", col=skyblue)
barplot(counts,main="number of CA by class", col="skyblue")
hist(Income,col="skyblue")
counts <- table(bclass)
barplot(counts,main="number of CA by class", col="skyblue")
#graphs in r
hist(Income,col="skyblue")
counts <- table(bclass)
barplot(counts,main="number of CA by class", col="skyblue")
plot(Unemp,Income, main="Scatter Unemployment vs. Income", col="red")
ablinelm(Income~Unemp,col="blue"))
#linear regression model
#regression
ols1 <- lm(Income ~ Unemp, data=cca)
summary(ols1)
#linear regression model
#regression
ols1 <- lm(Income ~ Unemp + bclass, data=cca)
summary(ols1)
#regression with category
cca$bclass <- as.factor(cca$bclass)
#linear regression model
#regression
ols1 <- lm(Income ~ Unemp, data=cca)
summary(ols1)
#regression with category
cca$bclass <- as.factor(cca$bclass)
ols2 <- lm(Income ~ Unemp + bclass, data=cca)
summary(ols2)
#regression with category
cca$bclass <- as.factor(cca$bclass)
ols2 <- lm(Income ~ Unemp + bclass, data=cca)
summary(ols2)
ols2 <- lm(Income ~ Unemp + bclass, data=cca)
#multiple regression model
ols3 <- lm(Income ~ Unemp + Black+ Hispanic, data=cca)
summary(ols3)
#stepwise regression model
ols4 <- step(lm(Income ~ Unemp + Black+ Hispanic, data=cca), direction="both")
summary(ols4)
#forward or backword
ols5 <- step(lm(Income ~ Unemp + Black+ Hispanic, data=cca), direction="backward")
summary(ols5)
set.seed(1234)
train_ind <- sample(nrow(cca), round(0.7*nrow(cca)))
train <-cca[train_ind,]
test <- cca[-train_ind,]
test <- cca[-train_ind,]
set.seed(1234)
tols3 <- lm(Income ~ Unemp + Black+ Hispanic, data=train)
tols4 <- step(lm(Income ~ Unemp + Black+ Hispanic, data=train), direction="both")
py3
py3 <- predict(tols3,newdta=test)
py4 <- predict(tols4,newdta=test)
py3
py4
pe3 <- predict(tols3,newdta=test)
pe4 <- predict(tols4,newdta=test)
pe3 <- predict(tols3,newdta=test)
pe4 <- predict(tols4,newdta=test)
mse3 <- mean(pe3^2)
mse4 <- mean(pe4^2)
print(mse3,mse4)
print(c(mse3,mse4))
rmse4 <-mse4^0.5
print(c(mse3,mse4))
default_probability <- read.csv("https://bigblue.depaul.edu/jlee141/econdata/eco520/loan_default.csv")
summary(default_probability)
loan <- read.csv("https://bigblue.depaul.edu/jlee141/econdata/eco520/loan_default.csv")
summary(loan)
str(loan)
#SPLIT INTO TRAIN VS TEST DATA
train_idx <- sample(nrow(indata),round(.8*nrow(indata))
print(train_idx)
print(train_idx)
train_idx <- sample(nrow(indata),round(.8*nrow(indata))
train <- indata[train_idx]
train_idx <- sample(nrow(indata),round(.8*nrow(indata)))
indata <- loan
train_idx <- sample(nrow(indata),round(.8*nrow(indata)))
train <- indata[train_idx]
train_idx <- sample(nrow(indata),round(.8*nrow(indata)))
train <- indata[train_idx,]
test <- indata[-train_idx,]
testy <- test$Default
train <- indata[train_idx,]
test <- indata[-train_idx,]
testy <- test$Default
str(train)
lm0 <- lm(Default~ Credit_score + Age, data=train)
summary(lm0)
print(lm0)
summary(lm0)
yhat0 <- predict(lm0, newdata=test)
head(yhat0)
yhat0 <- predict(lm0, newdata=test)
conf_table(yhat0,testy,"LPM")
conf_table(yhat0,testy,"LPM")
auc_plot(yhat0,testy,"LPM")
train_idx <- sample(nrow(indata),round(.8*nrow(indata)))
train <- indata[train_idx,]
test <- indata[-train_idx,]
testy <- test$Default
lm0 <- lm(Default~ Credit_score + Age, data=train)
summary(lm0)
yhat0 <- predict(lm0, newdata=test)
conf_table(yhat0,testy,"LPM")
source("https://bigblue.depaul.edu/jlee141/econdata/R/func_lib.R")
loan <- read.csv("https://bigblue.depaul.edu/jlee141/econdata/eco520/loan_default.csv")
source("https://bigblue.depaul.edu/jlee141/econdata/R/func_lib.R")
summary(loan)
str(loan)
indata <- loan
train_idx <- sample(nrow(indata),round(.8*nrow(indata)))
train <- indata[train_idx,]
test <- indata[-train_idx,]
testy <- test$Default
lm0 <- lm(Default~ Credit_score + Age, data=train)
summary(lm0)
yhat0 <- predict(lm0, newdata=test)
conf_table(yhat0,testy,"LPM")
auc_plot(yhat0,testy,"LPM")
conf_table(yhat0,testy,"LPM")
lm0 <- lm(Default~ Credit_score + Age, data=train)
summary(lm0)
yhat0 <- predict(lm0, newdata=test)
conf_table(yhat0,testy,"LPM")
auc_plot(yhat0,testy,"LPM")
lm1 <- lm(Default~ . , data=train)
summary(lm1)
yhat0 <- predict(lm0, newdata=test)
lm1 <- lm(Default~ . , data=train)
summary(lm1)
yhat1 <- predict(lm1, newdata=test)
conf_table(yhat1,testy,"LPM")
auc_plot(yhat1,testy,"LPM")
lm2 <- step(lm(Default~ . , data=train), direction = "both")
summary(lm2)
yhat2 <- predict(lm2, newdata=test)
conf_table(yhat1,testy,"LPM")
auc_plot(yhat2,testy,"LPM")
lm2 <- step(lm(Default~ . , data=train), direction = "both")
summary(lm2)
yhat2 <- predict(lm2, newdata=test)
conf_table(yhat1,testy,"LPM")
conf_table(yhat2,testy,"LPM")
auc_plot(yhat2,testy,"LPM")
lm2 <- step(lm(Default~ . , data=train), direction = "both")
summary(lm2)
yhat2 <- predict(lm2, newdata=test)
conf_table(yhat2,testy,"LPM")
auc_plot(yhat2,testy,"LPM")
logit0 <- gl(formula=Default~Credit_score + Age, data=train,
family=binomial(link=logit))
summary(logit0)
logit0 <- glm(formula=Default~Credit_score + Age, data=train,
family=binomial(link=logit))
summary(logit0)
loghat0 <- predict(logit0,newdata=test,type="response")
conf_table(loghat0,testy,"LOGIT")
auc_plot(loghat0,testy,"LPM")
logit1 <- glm(formula=Default~ . , data=train,
family=binomial(link=logit))
summary(logit1)
loghat1 <- predict(logit1,newdata=test,type="response")
conf_table(loghat1,testy,"LOGIT")
auc_plot(loghat1,testy,"LPM")
logit2 <- step(glm(formula=Default~ . , data=train,
family=binomial(link=logit)), direction = "both")
summary(logit2)
loghat2 <- predict(logit2,newdata=test,type="response")
conf_table(loghat2,testy,"LOGIT")
auc_plot(loghat2,testy,"LPM")
par(mfrow=c(2,3))
auc_plot(yhat0,testy,"LPM")
auc_plot(yhat1,testy,"LPM")
auc_plot(yhat2,testy,"LPM")
auc_plot(loghat0,testy,"LOGIT")
auc_plot(loghat1,testy,"LOGIT")
auc_plot(loghat2,testy,"LOGIT")
par(mfrow=c(1,1))
dec_lpm <- ifelse(yhat1 > .3, 1, 0)
table(testy,dec_lpm)
table(testy,dec_logit)
dec_logit  <- ifelse(loghat2 > .3, 1, 0)
table(testy,dec_logit)
saveRDS(lm1, "~ECO520/loan/LOAN_LPM.rds")
saveRDS(logit2, "~ECO520/loan/LOAN_LOG.rds")
dec_lpm <- ifelse(yhat1 > .3, 1, 0)
dec_logit  <- ifelse(loghat2 > .3, 1, 0)
table(testy,dec_lpm)
table(testy,dec_logit)
saveRDS(lm1, "~/zrc/Advanced_SrtatisticsII/LOAN_LPM.rds")
saveRDS(lm1, "zrc/Advanced_SrtatisticsII/LOAN_LPM.rds")
# SAVE THE ALGORITHM
saveRDS(lm1, "/zrc/Advanced_SrtatisticsII/LOAN_LPM.rds")
saveRDS(lm1, "/zrc/Advanced_StatisticsII/LOAN_LPM.rds")
saveRDS(lm1, "~zrc/Advanced_StatisticsII/LOAN_LPM.rds")
# SAVE THE ALGORITHM
saveRDS(lm1, "zrc/Advanced_StatisticsII/LOAN_LPM.rds")
saveRDS(logit2, "~ECO520/loan/LOAN_LOG.rds")
saveRDS(logit2, "zrc/Advanced_StatisticsII/LOAN_LOG.rds")
source("https://bigblue.depaul.edu/jlee141/econdata/R/func_lib.R")
gse <- read.csv("ttps://bigblue.depaul.edu/jlee141/econdata/fannie_mae/Fannie_Mort_IL_2007.csv")
gse <- read.csv("https://bigblue.depaul.edu/jlee141/econdata/fannie_mae/Fannie_Mort_IL_2007.csv")
library("neuralnet")
install neuralnet
library("neuralnet")
library(nnet)
install.packages("nnet")
source("https://bigblue.depaul.edu/jlee141/econdata/R/func_lib.R")
gse <- read.csv("https://bigblue.depaul.edu/jlee141/econdata/fannie_mae/Fannie_Mort_IL_2007.csv")
library("nnet")
str(gse)
FMindata <- subset(gse,select=-c(state,orgyear,fstimebuyer))
str(FMindata)
FMindata$purpose <- as.numeric(FMindata$purpose) - 1
FMindata$relo_flg <- as.numeric(FMindata$relo_flg) - 1
indata$occ_stat <- as.numeric(indata$occ_stat)
indata$occ_stat_dum1 <- ifelse(indata$occ_stat == 1, 1,0)
indata$occ_stat_dum2 <- ifelse(indata$occ_stat == 2, 1,0)
indata$occ_stat_dum3 <- ifelse(indata$occ_stat == 3, 1,0)
FMindata$purpose <- as.numeric(FMindata$purpose) - 1
FMindata$relo_flg <- as.numeric(FMindata$relo_flg) - 1
indata$occ_stat <- as.numeric(indata$occ_stat)
indata$occ_stat_dum1 <- ifelse(indata$occ_stat == 1, 1,0)
indata$occ_stat_dum3 <- ifelse(indata$occ_stat == 3, 1,0)
str(FMindata)
FMzindata <- min_max_nor(FMindata)
# Split the data into train and test data
set.seed(1937028)
train_ind <- sample(nrow(zindata), round(0.7*nrow(zindata)))
set.seed(1937028)
train_ind <- sample(nrow(zindata), round(0.7*nrow(zindata)))
ztrain <- zindata[train_ind,]
ztest <- zindata[-train_ind,]
testy <- ztest$delinq
library(neuralnet)
#neural network
library(nnet)
#simple
ztrain$delinq <- as.factor(ztrain$delinq)
nnet1 <- neuralnet(delinq~., data = ztrain, hidden = 2)
plot(nnet1)
pred1 <- predict(nnet1, newdata=ztest)
pred1 <- pred1[,2]
conf_table(pred1,testy,"nnet1")
auc_plot(pred1,testy,"nnet1")
nnet2 <- neuralnet(delinq~.,data=ztrain,hhidden = c(5,3),stepmax = 1e+07)
plot(nnet2)
pred2 <- predict(nnet2,newdata=ztest)
pred2 <- pred2[,1]
nnet3 <- neuralnet(delinq~.,data=ztrain,hidden=c(7,5,3), stepmax = 1e+07)
plot(nnet3)
pred3 <- predict(nnet3,newdata=ztest)
pred3 <- pred3[,2]
nnet4 <- neuralnet(delinq~.,data = ztrain, hidden = c(9,7,5,3), stepmax = 1e+07)
plot(nnet4)
pred4 <- predict(nnet4,newdata=ztest)
pred4 <- pred4[,2]
par(mfrow=c(2,2))
auc_plot(pred1,testy,"nnet1")
auc_plot(pred2,testy,"nnet2")
auc_plot(pred3,testy,"nnet3")
auc_plot(pred4,testy,"nnet4")
# THIS IS GOING TO BE THE DESTINATION FILE OF ALL OF YOUR ANALYSIS
inp <- read.csv("./data/Test_Inpatientdata-1542969243754")
# THIS IS GOING TO BE THE DESTINATION FILE OF ALL OF YOUR ANALYSIS
inp <- read.csv("/data/Test_Inpatientdata-1542969243754")
# THIS IS GOING TO BE THE DESTINATION FILE OF ALL OF YOUR ANALYSIS
inp <- read.csv("/data/Test_Inpatientdata-1542969243754.csv")
inp <- read.csv("./data/Test_Inpatientdata-1542969243754.csv")
# THIS IS GOING TO BE THE DESTINATION FILE OF ALL OF YOUR ANALYSIS
inp <- read.csv("/data/Test_Inpatientdata-1542969243754.csv")
# THIS IS GOING TO BE THE DESTINATION FILE OF ALL OF YOUR ANALYSIS
inp <- read.csv("data/Test_Inpatientdata-1542969243754.csv")
# THIS IS GOING TO BE THE DESTINATION FILE OF ALL OF YOUR ANALYSIS
#inp <- read.csv("data/Test_Inpatientdata-1542969243754.csv")
setwd("~/zrc/Insurance-Analysis/data")
inp <- read.csv(setwd)
inp <- read.csv("Test_Inpatientdata-1542969243754.csv")
str(inp)
head(inp)
tail(inp)
summary(inp)
summary(inp$Provider)
setwd("~/zrc/Insurance-Analysis/data")
inp <- read.csv("Train_Inpatientdata-1542865627584.csv")
inp2 <- read.csv("Train_Inpatientdata-1542865627584.csv")
str(inp)
head(inp)
summary(inp2)
summary(inp2$Provider)
setwd("~/zrc/Insurance-Analysis/data")
train <- read.csv("Train-1542865627584.csv")
train_outpatient <- read.csv("Train_Outpatientdata-1542865627584")
train_inpatient <- read.csv("Train_Inpatientdata-1542865627584.csv")
train_beneficiary <- read.csv("Train_Beneficiarydata-1542865627584.csv")
# ECO520 FINAL PROJECT
setwd("~/zrc/Insurance-Analysis/data")
train <- read.csv("Train-1542865627584.csv")
train_outpatient <- read.csv("Train_Outpatientdata-1542865627584.csv")
train_inpatient <- read.csv("Train_Inpatientdata-1542865627584.csv")
train_beneficiary <- read.csv("Train_Beneficiarydata-1542865627584.csv")
test <- read.csv("Test-1542969243754.csv")
test_outpatient <- read.csv("Test_Outpatientdata-1542969243754.csv")
test_inpatient <- read.csv("Test_Inpatientdata-1542969243754")
test_beneficiary <- read.csv("Test_Beneficiarydata-1542969243754.csv")
test <- read.csv("Test-1542969243754.csv")
test_outpatient <- read.csv("Test_Outpatientdata-1542969243754.csv")
test_inpatient <- read.csv("Test_Inpatientdata-1542969243754.csv")
test_beneficiary <- read.csv("Test_Beneficiarydata-1542969243754.csv")
head(train)
tail(train)
summary(train)
head(train_outpatient)
tail(train_outpatient)
summary(train_outpatient)
head(train_inpatient)
tail(train_inpatient)
summary(train_inpatient)
head(train_beneficiary)
tail(train_beneficiary)
summary(train_beneficiary)
hist(train$Provider, col="blue")
# SHAPE OF TRAIN DATA
barplot(counts,main="voter fraud presence", col=skyblue)
head(train)
tail(train)
summary(train)
head(train_outpatient)
tail(train_outpatient)
summary(train_outpatient)
head(test)
tail(test)
summary(test)
head(test_outpatient)
tail(test_outpatient)
summary(test_outpatient)
head(test_inpatient)
tail(test_inpatient)
summary(test_inpatient)
head(test_beneficiary)
tail(test_beneficiary)
summary(test_beneficiary)
head(train)
tail(train)
summary(train)
head(train_outpatient)
tail(train_outpatient)
summary(train_outpatient)
head(train)
tail(train)
summary(train)
summary(train$Provider)
summary(train_outpatient)
summary(train_outpatient$ClaimID)
summary(train_outpatient$ClaimID)
summary(train_outpatient$ClaimStartDt)
summary(train_outpatient$ClaimStartDt)
by(train_outpatient, train_outpatient$ClaimID)
head(train_outpatient)
tail(train_outpatient)
summary(train_outpatient)
summary(train_outpatient$ClaimStartDt)
by(train_outpatient, train_outpatient$ClaimID)
hist(train)
summary(train)
hist(train_outpatient)
#TRAIN DESCRIPTIVE STATISTICS
str(train)
str(train_beneficiary)
#TEST DESCRIPTIVE STATISTICS
str(test)
str(test_beneficiary)
boxplot(train$PotentialFraud)
summary(train_outpatient)
boxplot(train_outpatient$ClaimID)
str((train_outpatient))
str(train)
str(train_outpatient)
boxplot(train_outpatient$InscClaimAmtReimbursed)
# ECO520 FINAL PROJECT KING
library(dplyr)
library(dplyr)
library(dplyr)
install.packages(dplyr)
"dplyr"
# ECO520 FINAL PROJECT KING
library(dplyr)
# ECO520 FINAL PROJECT KING
library(tidyverse)
install.packages("dplyr")
# ECO520 FINAL PROJECT KING
library(dplyr)
summary(train)
train <- train %>%
mutate(PotentialFraud = if_else(PotentialFraud == "No", 0, 1))
summary(train)
str(train)
barplot(train, main="Potential Fraud Train distribution",
xlab="Provider", ylab="Potential Fraud", )
barplot(train$Provider, train$Provider, main="Potential Fraud Train distribution",
xlab="Provider", ylab="Potential Fraud")
train <- train %>%
mutate(PotentialFraud = if_else(PotentialFraud == "No", 0, 1))
barplot(train$Provider, train$Provider, main="Potential Fraud Train distribution",
xlab="Provider", ylab="Potential Fraud")
barplot(train)
barplot(train$PotentialFraud)
barplot(train$Provider, train$PotentialFraud)
barplot(train$Provider, train$PotentialFraud)
barplot(train$PotentialFraud, main = "distributions", xlab="Fraud", ylab="provider")
train <- train %>%
mutate(PotentialFraud = if_else(PotentialFraud == "Yes", 1, 0))
barplot(train$PotentialFraud, main = "distributions", xlab="Fraud", ylab="provider")
str(train)
head(train)
tail(train)
summary(train)
train1 <- train %>%
mutate(PotentialFraud = if_else(PotentialFraud == "No", 1, 0))
barplot(train1$PotentialFraud, main = "distributions", xlab="Fraud", ylab="provider")
train1 <- train %>%
mutate(PotentialFraud = if_else(PotentialFraud == "No", 1, 0))
barplot(train1$PotentialFraud, main = "distributions", xlab="Fraud", ylab="provider")
train1 <- train %>%
mutate(PotentialFraud = if_else(PotentialFraud == "No", 0, 1))
barplot(train1$PotentialFraud, main = "distributions", xlab="Fraud", ylab="provider")
barplot(train1, main = "distributions", xlab="Fraud", ylab="provider")
str(train)
head(train)
summary(train)
barplot(train1, main = "distributions", xlab="Fraud", ylab="provider")
train1 <- train %>%
mutate(PotentialFraud = if_else(PotentialFraud == "No", 0, 1))
barplot(train1, main = "distributions", xlab="Fraud", ylab="provider")
str(train)
train <- read.csv("Train-1542865627584.csv")
str(train)
head(train)
tail(train)
summary(train)
train1 <- train %>%
mutate(PotentialFraud = if_else(PotentialFraud == "No", 0, 1))
barplot(train1, main = "distributions", xlab="Fraud", ylab="provider")
barplot(train1$PotentialFraud, main = "distributions", xlab="Fraud", ylab="provider")
hist(train1$PotentialFraud, main = "distributions", xlab="Fraud", ylab="provider")
hist(train1$PotentialFraud, main = "Potential Fraud Distributions", xlab="Fraud", ylab="Insurance Provider")
str(train_outpatient)
summary(train_outpatient)
library(dplyr)
setwd("~/zrc/Insurance-Analysis/data")
train <- read.csv("Train-1542865627584.csv")
train_outpatient <- read.csv("Train_Outpatientdata-1542865627584.csv")
train_inpatient <- read.csv("Train_Inpatientdata-1542865627584.csv")
train_beneficiary <- read.csv("Train_Beneficiarydata-1542865627584.csv")
#LOAD TEST DATASET
test <- read.csv("Test-1542969243754.csv")
test_outpatient <- read.csv("Test_Outpatientdata-1542969243754.csv")
test_inpatient <- read.csv("Test_Inpatientdata-1542969243754.csv")
test_beneficiary <- read.csv("Test_Beneficiarydata-1542969243754.csv")
str(train)
head(train)
tail(train)
summary(train)
str(train_outpatient)
head(train_outpatient)
tail(train_outpatient)
summary(train_outpatient)
str(train_inpatient)
head(train_inpatient)
tail(train_inpatient)
summary(train_inpatient)
str(train_beneficiary)
head(train_beneficiary)
tail(train_beneficiary)
summary(train_beneficiary)
str(test)
head(test)
tail(test)
summary(test)
str(test_outpatient)
head(test_outpatient)
tail(test_outpatient)
summary(test_outpatient)
str(test_inpatient)
head(test_inpatient)
tail(test_inpatient)
summary(test_inpatient)
str(test_beneficiary)
head(test_beneficiary)
tail(test_beneficiary)
summary(test_beneficiary)
train1 <- train %>%
mutate(PotentialFraud = if_else(PotentialFraud == "No", 0, 1))
hist(train1$PotentialFraud, main = "Potential Fraud Distributions", xlab="Fraud", ylab="Insurance Provider")
hist(train1$PotentialFraud, main = "Potential Fraud Distributions", xlab="YES = 1 || NO =0", ylab="Insurance Provider")
